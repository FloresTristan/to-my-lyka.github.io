:root {
	--card-height: 40vw;
	--card-margin: 4vw;
	--card-top-offset: 1em;
	--numcards: 4;
	--outline-width: 0px;
}

h1{
    padding: 20px;
    color: brown;
    background-color: rgba(255, 255, 255, 0.723);
    border-radius: 50px;
    -webkit-border-radius: 50px;
    -moz-border-radius: 50px;
    -ms-border-radius: 50px;
    -o-border-radius: 50px;
}
header p{
    margin-top: 20px;
}

#cards {
	padding-bottom: calc(var(--numcards) * var(--card-top-offset)); /* Make place at bottom, as items will slide to that position*/
	margin-bottom: var(--card-margin); /* Don't include the --card-margin in padding, as that will affect the scroll-timeline*/
}

#card_1 {
	--index: 1;
}

#card_2 {
	--index: 2;
}

#card_3 {
	--index: 3;
}

#card_4 {
	--index: 4;
}

.card {
	position: sticky;
	top: 0;
	padding-top: calc(var(--index) * var(--card-top-offset));
}

@supports (animation-timeline: works) {

	@scroll-timeline cards-element-scrolls-in-body {
		source: selector(body);
		scroll-offsets:
			/* Start when the start edge touches the top of the scrollport */
			selector(#cards) start 1,
			/* End when the start edge touches the start of the scrollport */
			selector(#cards) start 0
		;
		start: selector(#cards) start 1; /* Start when the start edge touches the top of the scrollport */
		end: selector(#cards) start 0; /* End when the start edge touches the start of the scrollport */
		time-range: 4s;
	}

	.card {
		--index0: calc(var(--index) - 1); /* 0-based index */
		--reverse-index: calc(var(--numcards) - var(--index0)); /* reverse index */
		--reverse-index0: calc(var(--reverse-index) - 1); /* 0-based reverse index */
	}
	
	.card__content {
		transform-origin: 50% 0%;
		will-change: transform;

		--duration: calc(var(--reverse-index0) * 1s);
		--delay: calc(var(--index0) * 1s);

		animation: var(--duration) linear scale var(--delay) forwards;
		animation-timeline: cards-element-scrolls-in-body;
	}

	@keyframes scale {
		to {
			transform:
				scale(calc(
					1.1
					-
					calc(0.1 * var(--reverse-index))
				));
		}
	}
}

/** DEBUG **/

#debug {
  position: fixed;
  top: 1em;
  left: 1em;
}
#debug::after {
  content: " Show Debug";
  margin-left: 1.5em;
  color: white;
  white-space: nowrap;
}

#debug:checked ~ main {
  --outline-width: 1px;
}


/** PAGE STYLING **/

* { /* Poor Man's Reset */
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

body {
	background: rgb(255, 1, 1);
	color: rgb(255, 255, 255);
    background-image: url('images/rose.png');
    background-size: cover;
	text-align: center;

	font-size: calc(1em + 0.5vw);
}

header,
main {
	width: 80vw;
	margin: 0 auto;
}

header {
	height: 100vh;
	display: grid;
	place-items: center;
}

#cards {
	list-style: none;
	outline: calc(var(--outline-width) * 10) solid blue;
	
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: repeat(var(--numcards), var(--card-height));
	gap: var(--card-margin);
}

.card {
	outline: var(--outline-width) solid hotpink;
}

.card__content {
	box-shadow: 0 0.2em 1em rgba(0, 0, 0, 0.1), 0 1em 2em rgba(0, 0, 0, 0.1);
	background: rgb(255, 255, 255);
	color: rgb(10, 5, 7);
	border-radius: 1em;
	overflow: hidden;

	display: grid;
	grid-template-areas: "text img";
	grid-template-columns: 1fr 1fr;
	grid-template-rows: auto;

	align-items: stretch;
	outline: var(--outline-width) solid lime;
}

.card__content > div {
	grid-area: text;
	width: 80%;
	place-self: center;
	text-align: left;

	display: grid;
	gap: 1em;
	place-items: start;
}

.card__content > figure {
	grid-area: img;
	overflow: hidden;
}

.card__content > figure > img {
	width: 100%;
	height: 100%;
	object-fit: cover;
}

h1 {
	font-weight: 300;
	font-size: 3.5em;
}

h2 {
	font-weight: 300;
	font-size: 2.5em;
}
.h2_1{
    color: #db7ca5;
}
.h2_2{
    color: #c3b377;
}
.h2_3{
    color: #fdcdcd;
}
.h2_4{
    color: red;
}

p {
	font-family: sans-serif;
	font-weight: 300;
	line-height: 1.42;
}

.btn {
	background: rgb(188 87 36);
	color: rgb(255 255 255);
	text-decoration: none;
	display: inline-block;
	padding: 0.5em;
	border-radius: 0.25em;
}

aside {
    padding: 0;
    padding-left: 100px;
    padding-right: 100px;
    background-color: #db7ca5aa;
    border-radius: 20px;
    width: 50vw;
    margin: 0 auto;
    text-align: justify;
    -webkit-border-radius: 20px;
    -moz-border-radius: 20px;
    -ms-border-radius: 20px;
    -o-border-radius: 20px;
}

aside p {
    padding-top: 20px;
	margin-bottom: 1em;
}
@media only screen and (max-width: 768px) {
    body {
        font-size: 16px; /* Increase font size for better readability on smaller screens */
    }

    header {
        height: auto;
        padding: 20px 0; /* Adjust header padding */
    }

    header div {
        padding-bottom: 20px; /* Add some space below header content */
    }

    #cards {
        grid-template-columns: 1fr; /* Change card layout to a single column */
        gap: 20px; /* Increase gap between cards */
    }

    .card {
        padding-top: 0; /* Remove top padding from cards */
    }

    .card__content {
        grid-template-areas: "img" "text"; /* Stack image on top of text */
        grid-template-columns: 1fr; /* Change content layout to a single column */
        padding: 20px; /* Add padding to content */
    }

    .card__content > div {
        width: 100%; /* Set text width to 100% */
        text-align: center; /* Center align text */
    }

    .card__content > figure {
        margin-bottom: 20px; /* Add some space below image */
    }

    aside {
        width: 80%; /* Make aside width responsive */
        padding: 20px; /* Adjust padding */
    }
}

/* Additional styling for smaller screens */
@media only screen and (max-width: 480px) {
    h1 {
        font-size: 2.5em; /* Decrease header font size */
    }

    h2 {
        font-size: 1.8em; /* Decrease subheader font size */
    }

    aside {
        width: 90%; /* Further decrease aside width */
    }
}
